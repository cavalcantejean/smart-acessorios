
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.isAdmin == true;
    }
    function isOwner(docUserId) {
      return request.auth != null && request.auth.uid == docUserId;
    }

    // Coleção de Usuários
    match /usuarios/{userId} {
      allow read: if true; // Qualquer um pode ler perfis de usuário (para páginas de perfil públicas)
      
      allow create: if isOwner(userId) &&
                       request.resource.data.email == request.auth.token.email &&
                       request.resource.data.name is string && request.resource.data.name.size() > 0 &&
                       request.resource.data.isAdmin == false &&
                       (!('createdAt' in request.resource.data) || request.resource.data.createdAt == request.time) &&
                       (!('updatedAt' in request.resource.data) || request.resource.data.updatedAt == request.time);
                       // Badge-related fields and follower/following removed from create rule
                       
      allow update: if (isOwner(userId) && 
                        request.resource.data.email == resource.data.email && // Email não pode ser alterado pelo usuário
                        request.resource.data.isAdmin == resource.data.isAdmin && // Admin status não pode ser alterado pelo usuário
                        // Badge-related fields and follower/following removed from update rule
                        (!('updatedAt' in request.resource.data) || request.resource.data.updatedAt == request.time) &&
                        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['name', 'avatarUrl', 'avatarHint', 'bio', 'updatedAt'])) || 
                       (isAdmin() && (!('updatedAt' in request.resource.data) || request.resource.data.updatedAt == request.time)); // Admins podem atualizar mais campos

      allow delete: if isAdmin(); // Apenas admins podem deletar usuários
    }

    // Coleção de Acessórios
    match /acessorios/{accessoryId} {
      allow read: if true; // Qualquer um pode ler acessórios
      
      allow create: if isAdmin() && 
                       request.resource.data.name is string &&
                       (!('createdAt' in request.resource.data) || request.resource.data.createdAt == request.time) &&
                       (!('updatedAt' in request.resource.data) || request.resource.data.updatedAt == request.time);
                       // LikedBy and comments are not set on create by admin

      allow update: if isAdmin() && 
                       (!('updatedAt' in request.resource.data) || request.resource.data.updatedAt == request.time);
                       // Admin can update all fields. User-specific updates like like/comment were removed.

      allow delete: if isAdmin(); // Apenas admins podem deletar acessórios
    }

    // Coleção de Cupons
    match /cupons/{couponId} {
      allow read: if true; // Qualquer um pode ler cupons
      
      allow create: if isAdmin() &&
                       request.resource.data.code is string &&
                       (!('createdAt' in request.resource.data) || request.resource.data.createdAt == request.time) &&
                       (!('updatedAt' in request.resource.data) || request.resource.data.updatedAt == request.time);
                       
      allow update: if isAdmin() &&
                       (!('updatedAt' in request.resource.data) || request.resource.data.updatedAt == request.time);
                       
      allow delete: if isAdmin();
    }

    // Coleção de Posts do Blog
    match /posts/{postId} {
      allow read: if true; // Qualquer um pode ler posts
      
      allow create: if isAdmin() &&
                       request.resource.data.title is string &&
                       request.resource.data.slug is string &&
                       (!('publishedAt' in request.resource.data) || request.resource.data.publishedAt is timestamp) &&
                       (!('createdAt' in request.resource.data) || request.resource.data.createdAt == request.time) &&
                       (!('updatedAt' in request.resource.data) || request.resource.data.updatedAt == request.time);
                       
      allow update: if isAdmin() &&
                       (!('updatedAt' in request.resource.data) || request.resource.data.updatedAt == request.time);
                       
      allow delete: if isAdmin();
    }

    // Coleção de Configurações do Site
    match /configuracoes/{docId} {
      allow read: if true; // Configurações do site podem ser lidas por todos (para renderização do layout, metadados)
      
      // Apenas um documento específico deve existir, ex: 'site_settings_doc'
      allow create: if isAdmin() && docId == "site_settings_doc" &&
                       (!('createdAt' in request.resource.data) || request.resource.data.createdAt == request.time) && // Opcional
                       (!('updatedAt' in request.resource.data) || request.resource.data.updatedAt == request.time); // Opcional
                       
      allow update: if isAdmin() && docId == "site_settings_doc" &&
                       (!('updatedAt' in request.resource.data) || request.resource.data.updatedAt == request.time); // Opcional
                       
      allow delete: if false; // Geralmente não se deleta o documento de configurações, apenas atualiza
    }
  }
}
